<?php

/**
 * hook_menu()
 */
function entity_reference_diagram_menu() {
  $items['admin/structure/erd'] = array(
    'title' => 'Entity reference diagram',
    'description' => 'Visualize the entity references relationships',
    'page callback' => 'erd_page',
    'access arguments' => array('administer site configuration'),
    'type' => MENU_NORMAL_ITEM,
  );

  return $items;
}

function erd_page() {
//  $entity_info = entity_get_info();
//  dsm($entity_info);
  $fields = field_info_field_map();
  $relations = array();
  $formatted_relations = array();
  $regsitered_relations = array();
  $relation_strings = array();
  foreach ($fields AS $field_name => $data) {
    if ($data['type'] === 'entityreference') {
      $field = field_info_field($field_name);
      $relations[$field_name] = array(
        'sources' => $field['bundles'],
        'targets' => (!empty($field['settings']['handler_settings']['target_bundles'])) ? $field['settings']['handler_settings']['target_bundles'] : array($field['settings']['target_type'] => $field['settings']['target_type'])
      );
      format_relations($relations[$field_name]['sources'], $field_name, $relations[$field_name]['targets'], $formatted_relations, $regsitered_relations, $relation_strings);
    }
  }
  drupal_alter('entity_relations', $relations);
  
  drupal_add_js('var entity_relations = ' . drupal_json_encode($formatted_relations), 'inline');
  drupal_add_js('https://www.google.com/jsapi', 'external');
  drupal_add_js('https://cdn.rawgit.com/asvd/dragscroll/master/dragscroll.js', 'external');
  drupal_add_js(drupal_get_path('module', 'entity_reference_diagram') . '/relations-draw.js', 'file');
  $filter = drupal_get_form('erd_filter', $relation_strings);
  drupal_add_css(drupal_get_path('module', 'entity_reference_diagram') . '/relations-draw.css', 'file');
  $info = '<p>' . t('The relationship is composited as: ') . '<b>' . t('[entity_reference_fieldname]@[bundle]:[type] -> [target_type]') . '</b></p>';
  return drupal_render($filter) . $info . '<div id="chart_div" class="dragscroll"></div>';
}

function format_relations($sources, $field_name, $targets, &$formatted_relations, &$regsitered_relations, &$relation_strings) {
  foreach ($sources AS $bundle_key => $src) {
    foreach ($src AS $src_nodetype) {
      foreach ($targets AS $target) {
        $relation_string = "$field_name@$bundle_key:$src_nodetype -> $target";
        $relation_strings[] = $relation_string;
        if(!empty($_SESSION['entity_ref_fields']) && empty($_SESSION['entity_ref_fields'][$relation_string])) {
          continue;
        }
        $general_relation = "$src_nodetype -> $target";
        $general_relation_revert = "$target -> $src_nodetype";
        $key = getRelationKey($general_relation, $general_relation_revert, $regsitered_relations);
        if ($key >= 0) {
          //already in $relations
          $formatted_relations[$key]['desc'][] = $relation_string;
        }
        else {
          $regsitered_relations[] = $general_relation;
          $formatted_relations[] = array(
            'desc' => array($relation_string),
            'self' => $target,
            'parent' => $src_nodetype
          );
        }
      }
    }
  }
  return $formatted_relations;
}

function getRelationKey($direction, $revert_direction, $regsitered_relations) {
  $keys = array_keys($regsitered_relations, $direction);
  if (empty($keys)) {
    $keys = array_keys($regsitered_relations, $revert_direction);
  }
  if (empty($keys)) {
    return -1;
  }
  else {
    return $keys[0];
  }
}

function erd_filter($form, &$form_state, $relations) {
  $form['filter'] = array(
    '#type' => 'fieldset',
    '#title' => t('Filters'),
    '#weight' => 5,
    '#collapsible' => TRUE,
    '#collapsed' => TRUE,
    '#description' => t('There might be an situation that lots references are just for easy accesses to other content. They are not meant to define the real "architecture level" entity relationship. You can filter out those unnecessary relationships to have a much cleaner and more meanningful entity relationship diagram.')
  );
  $options = array();
  foreach($relations AS $k => $val) {
    $options[$val] = $val;
  }
  $form['filter']['entity_ref_fields'] = array(
    '#type' => 'checkboxes',
    '#options' => $options,
    '#title' => '',
    '#default_value' => !empty($_SESSION['entity_ref_fields']) ? $_SESSION['entity_ref_fields'] : array()
  );
  $form['filter']['submit'] = array(
    '#type' => 'submit',
    '#value' => t('filter')
  );
  $form['filter']['reset'] = array(
    '#type' => 'submit',
    '#value' => t('reset'),
    '#submit' => array('erd_filter_reset')
  );
  return $form;
}

function erd_filter_submit($form, $form_state){
  $values = array_filter($form_state['values']['entity_ref_fields']);
  if(empty($values)) {
    unset($_SESSION['entity_ref_fields']);
  } else {
    $_SESSION['entity_ref_fields'] = $form_state['values']['entity_ref_fields'];
  }
}

function erd_filter_reset($form, $form_state){
  unset($_SESSION['entity_ref_fields']);
}